class dopki (

  # class arguments
  # ---------------
  # setup defaults

  $user = 'web',
  $user_email = 'admin@example.com',
  $user_ssh_access = true,

  # main user's public and private (with passphrase) keys
  $key_public = '',
  $key_private = '',
  $key_private_passphrase = 'admLn**',
  $key_private_type = 'dsa',
  $key_private_name = undef,

  $notifier_dir = '/etc/puppet/tmp',
  
  # end of class arguments
  # ----------------------
  # begin class

) {

  # derive a name for the private key file, if not defined
  if ($key_private_name == undef) {
    $key_private_name_real = "id_${key_private_type}"
  } else {
    $key_private_name_real = $key_private_name
  }

  # ensure that we've got a .ssh directory
  file { 'user-ssh-dir' :
    name   => "/home/${user}/.ssh",
    ensure => 'directory',
    owner  => $user,
    group  => $user,
    mode   => 700,
  }

  # write the keys to their files
  dopki::addkey { 'dopki-add-firstkey' :
    user => $user,
    user_email => $user_email,
    user_ssh_access => $user_ssh_access,
    key_public => $key_public,
    key_private => $key_private,
    key_private_passphrase => $key_private_passphrase,
    key_private_type => $key_private_type,
    key_private_name => $key_private_name_real,
    notifier_dir => $notifier_dir,
  }

  # if we don't have a private key, create one
  if ($key_private == '') {
    # create a new key from scratch
    exec { 'ssh-create-key-id_xsa':
      path    => '/usr/bin:/bin',
      command => "ssh-keygen -t ${key_private_type} -C 'generated by Devopera for ${user} (${user_email})' -N '${key_private_passphrase}' -f /home/${user}/.ssh/${key_private_name_real}",
      user    => $user,
      creates => "/home/${user}/.ssh/${key_private_name_real}",
      before  => [Class['dopki::sshagentadd']],
      require => [User[$user], Package['openssh-client']],
    }
  }

  # allow this machine to ssh to others by loading keys into ssh-agent
  class { 'dopki::sshagentadd' :
    user => $user,
    key_passphrase => $key_private_passphrase,
    key_name => $key_private_name_real,
    require => [File['user-ssh-dir'], Dopki::Addkey['dopki-add-firstkey']],
  }

}
